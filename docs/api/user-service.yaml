openapi: 3.0.3
info:
  title: User Service API
  version: 0.1.0
servers:
  - url: https://api.example.com/user-service
paths:
  /api/v1/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/auth/token:
    post:
      summary: Obtain JWT access token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: Token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
  /api/v1/users/me:
    get:
      security:
        - bearerAuth: []
      summary: Get current user profile
      responses:
        '200':
          description: Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      security:
        - bearerAuth: []
      summary: Update current user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users:
    get:
      security:
        - bearerAuth: []
      summary: List users (admin)
      responses:
        '200':
          description: User list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
        notification_preferences:
          type: object
        default_location:
          type: object
        created_at:
          type: string
          format: date-time
    UserCreate:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
        default_location:
          type: object
        notification_preferences:
          type: object
    UserUpdate:
      type: object
      properties:
        full_name:
          type: string
        default_location:
          type: object
        notification_preferences:
          type: object
    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
