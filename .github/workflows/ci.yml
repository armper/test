name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["alerts-normalizer-svc", "alerts-matcher-svc", "map-service", "workers/email-worker", "workers/push-worker"]
    defaults:
      run:
        working-directory: services/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Static analysis
        run: python -m compileall .

  java-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["notification-router-service", "sms-worker-service", "user-service", "admin-service"]
    defaults:
      run:
        working-directory: services/java/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
      - name: Build with Maven
        run: mvn -B -DskipTests package

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm install
      - run: npm run build

  schemas:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install fastavro
      - run: python scripts/validate_avro.py

  docker-build:
    runs-on: ubuntu-latest
    needs: [python-services, java-services, frontend, schemas]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Build images
        run: |
          docker build -t weather/alerts-normalizer-svc:ci ./services/alerts-normalizer-svc
          docker build -t weather/alerts-matcher-svc:ci ./services/alerts-matcher-svc
          docker build -t weather/map-service:ci ./services/map-service
          docker build -t weather/email-worker:ci ./services/workers/email-worker
          docker build -t weather/push-worker:ci ./services/workers/push-worker
          docker build -t weather/notification-router-service:ci ./services/java/notification-router-service
          docker build -t weather/sms-worker-service:ci ./services/java/sms-worker-service
          docker build -t weather/user-service:ci ./services/java/user-service
          docker build -t weather/admin-service:ci ./services/java/admin-service
          docker build -t weather/frontend:ci ./frontend
