{{- $values := .Values -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-matcher
spec:
  replicas: 2
  selector:
    matchLabels:
      app: alerts-matcher
  template:
    metadata:
      labels:
        app: alerts-matcher
    spec:
      containers:
        - name: alerts-matcher
          image: {{ $values.services.alertsMatcher.image }}
          imagePullPolicy: {{ $values.imagePullPolicy }}
          env:
            - name: KAFKA_BROKER
              value: {{ $values.kafka.bootstrapServers | quote }}
            - name: SCHEMA_REGISTRY_URL
              value: {{ $values.schemaRegistry.url | quote }}
            - name: DATABASE_URI
              value: "postgresql+psycopg2://{{ $values.postgres.user }}:{{ $values.postgres.password }}@{{ $values.postgres.host }}:{{ $values.postgres.port }}/{{ $values.postgres.database }}"
          ports:
            - containerPort: 8007
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8007
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-router
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-router
  template:
    metadata:
      labels:
        app: notification-router
    spec:
      containers:
        - name: notification-router
          image: {{ $values.services.notificationRouter.image }}
          imagePullPolicy: {{ $values.imagePullPolicy }}
          env:
            - name: KAFKA_BROKER
              value: {{ $values.kafka.bootstrapServers | quote }}
            - name: SPRING_PROFILES_ACTIVE
              value: kubernetes
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: {{ $values.services.userService.image }}
          imagePullPolicy: {{ $values.imagePullPolicy }}
          env:
            - name: DATABASE_URI
              value: "jdbc:postgresql://{{ $values.postgres.host }}:{{ $values.postgres.port }}/{{ $values.postgres.database }}"
            - name: DATABASE_USER
              value: {{ $values.postgres.user | quote }}
            - name: DATABASE_PASSWORD
              value: {{ $values.postgres.password | quote }}
            - name: KAFKA_BROKER
              value: {{ $values.kafka.bootstrapServers | quote }}
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
